{"mappings":"ACEA,IAAM,EAAW,SAAS,gBAAgB,CAAC,eACrC,EAAU,EAAE,CAEb,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAiB,CAAA,CAAA,OAAA,QAAA,CAAA,GAAjB,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAA2B,CAC9B,IAAI,EAAO,AADR,EAAA,KAAA,CACgB,WAAW,CAE9B,EAAO,EAAK,OAAO,CAAC,KAAM,IAE1B,IAAM,EAAS,SAAS,GAEnB,MAAM,IACT,EAAQ,IAAI,CAAC,GAGf,IAAM,EAAQ,EAAQ,MAAM,CAC1B,SAAC,CAAA,CAAa,CADhB,EACiC,OAAA,EAAc,CAC7C,EAAA,GAGI,EAAU,EAAQ,EAAS,MAAM,CAEjC,EAAiB,EAAM,cAAc,GACrC,EAAmB,EAAQ,cAAc,GAEzC,EAAY,SAAS,aAAa,CAAC,qBACnC,EAAc,SAAS,aAAa,CAAC,sBAE3C,CAAA,EAAU,WAAW,CAAG,EACxB,EAAY,WAAW,CAAG,CAC5B,C,C,M,E,CA1BK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["'use strict';\nvar elements = document.querySelectorAll('.population');\nvar numbers = [];\nvar _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\ntry {\n    for(var _iterator = elements[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n        var element = _step.value;\n        var text = element.textContent;\n        text = text.replace(/,/g, '');\n        var number = parseInt(text);\n        if (!isNaN(number)) numbers.push(number);\n        var total = numbers.reduce(function(accumulator, currentValue) {\n            return accumulator + currentValue;\n        }, 0);\n        var average = total / elements.length;\n        var formattedTotal = total.toLocaleString();\n        var formattedAverage = average.toLocaleString();\n        var totalElem = document.querySelector('.total-population');\n        var averageElem = document.querySelector('.average-population');\n        totalElem.textContent = formattedTotal;\n        averageElem.textContent = formattedAverage;\n    }\n} catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n        }\n    } finally{\n        if (_didIteratorError) {\n            throw _iteratorError;\n        }\n    }\n}\n\n//# sourceMappingURL=index.67828b3d.js.map\n","'use strict';\n\nconst elements = document.querySelectorAll('.population');\nconst numbers = [];\n\nfor (const element of elements) {\n  let text = element.textContent;\n\n  text = text.replace(/,/g, '');\n\n  const number = parseInt(text);\n\n  if (!isNaN(number)) {\n    numbers.push(number);\n  }\n\n  const total = numbers.reduce(\n    (accumulator, currentValue) => accumulator + currentValue,\n    0,\n  );\n\n  const average = total / elements.length;\n\n  const formattedTotal = total.toLocaleString();\n  const formattedAverage = average.toLocaleString();\n\n  const totalElem = document.querySelector('.total-population');\n  const averageElem = document.querySelector('.average-population');\n\n  totalElem.textContent = formattedTotal;\n  averageElem.textContent = formattedAverage;\n}\n"],"names":["elements","document","querySelectorAll","numbers","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","text","element","value","textContent","replace","number","parseInt","isNaN","push","total","reduce","accumulator","currentValue","average","length","formattedTotal","toLocaleString","formattedAverage","totalElem","querySelector","averageElem","err","return"],"version":3,"file":"index.67828b3d.js.map"}